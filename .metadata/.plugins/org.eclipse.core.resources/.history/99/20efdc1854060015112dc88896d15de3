package search;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class HeapSortTest {
	public void heapSortTest() {
	}
	
	@Test
	public void testNoneElement(){
		int[] actualValue = null, expectedValue = {} ;
		int[] elements = {};
		
		System.out.println("testEmptyArray");
		
		HeapSort target = new HeapSort();
		actualValue = target.sort(elements);
		
		System.out.println("Return ");
		assertEquals(expectedValue.length, actualValue.length);
	}
	
	@Test(expected=NullPointerException.class)
	public void testNullArray(){
		int[] actualValue = {};
		System.out.println("testNullArray");
		
		HeapSort target = new HeapSort();
		actualValue = target.sort(null);
	}
	
	@Test
	public void testOneElement(){
		int[] elements = {1};
		int[] actualValue = null;
		int expectedValue = 1;
		
		System.out.println("testOneElement");
		
		HeapSort target = new HeapSort();
		actualValue = target.sort(elements);
		
		assertEquals(expectedValue, actualValue[0]);
	}
	
	@Test
	public void testOnlyPositiveElements(){
		int[] elements = {1, 2, 10, Integer.MAX_VALUE};
		int actualValue = 0, expectedValue = 2;
		
		System.out.println("testOnlyPositiveElements");
		
		BinarySearch target = new BinarySearch();
		actualValue = target.find(elements, 10);
		
		assertEquals(expectedValue, actualValue);
	}
}
